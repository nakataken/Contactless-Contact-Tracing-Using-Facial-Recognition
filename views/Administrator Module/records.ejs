<%- include("./partials/header.ejs", {title:"Records"}) %>
    <div id="app">
        <div v-if="admin" class="home_adm  container-fluid p-0">
            <%- include("./partials/navbar.ejs"); %>
            <div class="app-wrapper">
                <div class="app-content pt-3 p-md-3 p-lg-4">
                    <div class="container-xl">
                        <div class="head container" >
                            <nav id="orders-table-tab" class="orders-table-tab app-nav-tabs nav shadow-sm flex-column flex-sm-row mb-4">
                                <a class="flex-sm-fill text-sm-center nav-link active" id="orders-all-tab" data-bs-toggle="tab" href="" @click="toggleTab(1)" role="tab" aria-controls="orders-all" aria-selected="true">Visitors</a>
                                <a class="flex-sm-fill text-sm-center nav-link"  id="orders-paid-tab" data-bs-toggle="tab" href="" @click="toggleTab(2)" role="tab" aria-controls="orders-paid" aria-selected="false">Establishment</a>
                            </nav>
                            <!-- Trace by Visitors -->
                            <div v-if="tab == 1">
                                <form class="container">
                                    <div class="col-12 py-2">
                                        <input class="form-control" list="visitors" placeholder="Select Visitor" v-model="searchVisitor" @change="submitVisitor" :disabled="disableVisitor">
                                        <datalist id="visitors" class="col-12"> 
                                            <option v-for="visitor in filteredVisitors" :key="visitor._id" :value="visitor._id">{{visitor.name.fname}} {{visitor.name.lname}}</option>
                                        </datalist> 
                                    </div>
                                
                                    <div class="d-flex flex-row py-2">
                                        <div class="col-6 ">
                                            <input class="form-check-input" v-model="option" type="radio" name="option" value="byDate" checked :disabled="disableFields">
                                            <label class="ms-3 form-check-label">Date - Date</label>
                                        </div>
                                        <div class="col-6 ">
                                            <input class="form-check-input" v-model="option" type="radio" name="option" value="byTime" :disabled="disableFields">
                                            <label class="ms-3 form-check-label">Time - Time</label>
                                        </div>
                                    </div>
                                    <!-- First Option -->
                                    <div v-if="!toggleOption" class="row">
                                        <div class="col-6"> 
                                            <label>From</label>
                                            <input  class="form-control" type="date" v-model="filter.date1" id="date1" :max="max" :disabled="disableFields"><span>*</span>
                                            <input  class="form-control" type="time" v-model="filter.time1" :disabled="disableFields">
                                        </div>
                                        <div class="col-6">
                                            <label>To</label>
                                            <input  class="form-control" type="date" v-model="filter.date2" id="date2" :max="max" :disabled="disableFields"><span>*</span>
                                            <input  class="form-control" type="time" v-model="filter.time2" :disabled="disableFields">
                                        </div>
                                    </div>  
                                    <!-- Second Option -->
                                    <div v-else class="row">
                                        <div >
                                            <label>Date</label>
                                            <input  class="form-control" type="date" v-model="filter.date1" id="date1" :max="max"><span>*</span>
                                            <div class="row">
                                                <div class="col-6">
                                                    <label>From</label>
                                                    <input  class="form-control" type="time" v-model="filter.time1">
                                                </div>
                                                <div class="col-6">
                                                    <label>From</label>
                                                    <input  class="form-control" type="time" v-model="filter.time2">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p v-if="errorMessage" class="errormessage text-danger">{{errorMessage}}</p>
                                    <div class="mt-4">   
                                        <button class="btn btn-primary me-2" @click="clear">Clear</button>
                                        <button class="btn btn-primary" @click="submitVisitorFilter">Filter</button>
                                    </div>
                                    
                                </form>

                                <div class="container mt-3">
                                    <div  class="col-6"> 
                                        <select class="btn border dropdown-toggle col-12" @change="sortChange" >
                                            <option>Latest</option>
                                            <option>Older</option>
                                        </select>
                                    </div>
                                    
                                    <div class="mt-2">
                                        <input class="form-control" type="text" v-model="searchTab1" placeholder="Filter by establishment name">
                                    </div>
                                </div>

                            </div>
                            <!-- Trace by Establishments -->
                            <div v-if="tab == 2">
                                <form class="container">
                                    <div class="col-12 py-2">
                                        <input  class="form-control" list="establishments" placeholder="Select establishment" v-model="searchEstablishment" @change="submitEstablishment" :disabled="disableEstablishments"> 
                                        <datalist id="establishments"> 
                                            <option v-for="establishment in filteredEstablishments" :key="establishment._id" :value="establishment._id">{{establishment.name}}</option>
                                        </datalist> 
                                    </div>
                                    <div class="d-flex flex-row py-2">
                                        <div class="col-6 ">
                                            <input v-model="option" type="radio" name="option" value="byDate" checked :disabled="disableFields">
                                            <label>Date - Date</label>
                                        </div>
                                        <div class="col-6 ">
                                            <input v-model="option" type="radio" name="option" value="byTime" :disabled="disableFields">
                                            <label>Time - Time</label>
                                        </div>
                                    </div>

                                    <!-- First Option -->
                                    <div v-if="!toggleOption" class="row">
                                        <div class="col-6"> 
                                            <label>From</label>
                                            <input class="form-control" type="date" v-model="filter.date1" id="date1" :max="max" :disabled="disableFields"><span>*</span>
                                            <input class="form-control" type="time" v-model="filter.time1" :disabled="disableFields">
                                        </div>
                                        <div class="col-6">
                                            <label>To</label>
                                            <input class="form-control" type="date" v-model="filter.date2" id="date2" :max="max" :disabled="disableFields"><span>*</span>
                                            <input class="form-control" type="time" v-model="filter.time2" :disabled="disableFields">
                                        </div>
                                    </div>  
                                    <!-- Second Option -->
                                    <div v-else class="row">
                                        <div>
                                            <label>Date</label>
                                            <input class="form-control" type="date" v-model="filter.date1" id="date1" :max="max"><span>*</span>
                                            <div class="row">
                                                <div class="col-6">
                                                    <label>From</label>
                                                    <input class="form-control" type="time" v-model="filter.time1">
                                                </div>
                                                <div class="col-6">
                                                    <label>From</label>
                                                    <input class="form-control" type="time" v-model="filter.time2">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p v-if="errorMessage" class=" text-danger">{{errorMessage}}</p>
                                    <div class="mt-4">   
                                        <button class="btn btn-primary me-2" @click="clear">Clear</button>
                                        <button class="btn btn-primary" @click="submitEstablishmentFilter">Filter</button>
                                    </div>
                                   
                                </form>

                                <div  class="container mt-3">
                                    <div  class="col-6">
                                        <select  class="btn border dropdown-toggle col-12" @change="sortChange">
                                            <option>Latest</option>
                                            <option>Older</option>
                                        </select>
                                    </div>
                                    <div class="mt-2">
                                        <input class="form-control" type="text" v-model="searchTab2" placeholder="Filter by First or Last Name">
                                    </div>
                                </div>
                            </div>

                            <!-- Table 1 -->
                            <div class="table-responsive col-12 mx-auto p-0 mt-5">
                                <table  class="table app-table-hover mb-0 text-center">
                                <thead>
                                    <th class="cell">Name</th>
                                    <th class="cell">Date & Time</th>
                                    <th class="cell">Establishment</th>
                                    <th class="cell"></th>
                                </thead>
                                
                                <tr v-for="log in filteredLogs.slice(pageFirstIndex,pageLastIndex)" :key="log._id">
                                    <td class="cell">{{log.name.fname}} {{log.name.lname}}</td>
                                    <td class="cell">{{log.date}}</td>
                                    <td class="cell">{{log.establishment}}</td>
                                    <td class="cell"><span class="btn-sm app-btn-secondary" @click="handleAction(log.visitor_id)">clickable option</span></td>
                                </tr>
                                </table>
                                <div v-if="loaded  == false" class="load-div col-12 d-flex justify-content-center align-items-center">
                                    <div class="my-auto" id="loading"></div>
                                </div>
                            </div>
                            <!-- Pagination -->
                            <div class="mt-5 d-flex flex-row justify-content-center">
                                <nav aria-label="Page navigation example mt-5 mx-auto">
                                    <ul class="pagination">
                                        <li class="page-item"  @click="getPrevPageIndex()"><a class="page-link" href="#">Previous</a></li>
                                        <div class="border px-5 d-flex align-items-center"><p class="my-auto">{{pageFirstIndex+1}}-{{pageLastIndex}}</p></div>
                                        <li class="page-item" @click="getNextPageIndex()"><a class="page-link" href="#">Next</a></li>
                                    </ul>
                                  </nav>
                            </div>
                            <!-- Table 2 -->
                        </div>
                    </div>  
                </div>
            </div> 
        </div>
    </div>
<script>
    const app = Vue.createApp({
        data() {
            return {
                // General
                admin: JSON.parse('<%- JSON.stringify(admin) %>'),
                loaded: false,
                tab: 1,
                logs: [],
                sortOrder: "Latest",
                max: "",
                filter: {},                
                disableFields: true,
                option: "byDate",
                errorMessage: "",

                pageCurrent:1,
                pageFirstIndex:0,
                pageLastIndex:10,

                reloadContent: async () => {
                    const response = await fetch("/admin/records/logs");
                    const result = await response.json();
                    this.logs = await result.logs;
                    this.loaded = true;            
                },
                // For Tab 1
                searchTab1: "",
                searchVisitor: "",
                disableVisitor: false,
                visitors: [],
                getVisitors: async () => {
                    const response = await fetch("/admin/visitors/list");
                    const result = await response.json();
                    this.visitors = await result.visitors;   
                    this.loaded = true;
                },
                // For Tab 2
                searchTab2: "",
                searchEstablishment: "",
                disableEstablishments: false,
                establishments: [],
                getEstablishments: async () => {
                    const response = await fetch("/admin/establishments");
                    const result = await response.json();
                    this.establishments = await result.establishments; 
                    this.loaded = true;
                }
            }
        },
        methods: {
            // General
         
            toggleTab(toggle) {
                this.tab = toggle;
            },
            sortChange(event) {
                this.sortOrder = event.target.value;
            },
            handleAction(id) {
                alert(id)
            },
            clear(event) {
                event.preventDefault();
                this.filter = {};
                this.toggleOption = false;
                this.disableFields = true;
                this.errorMessage = "";
                this.reloadContent();
                this.searchVisitor = "";
                this.searchEstablishment = "";

                if(tab == 1) {
                    this.searchTab1 = "";
                    this.visitors = [];
                    this.disableVisitor = false;
                    this.getVisitors();
                } else {
                    this.searchTab2 = "";
                    this.establishments = [];
                    this.disableEstablishments = false;
                    this.getEstablishments();
                }
            },
            // For Tab 1
            submitVisitor(event){
                this.filter.id = event.target.value;
                this.disableVisitor = true;
                this.disableFields = false;
            
            },
            async submitVisitorFilter(event) {
                event.preventDefault();

                // check required fields
                if(!this.filter.date1) {
                    this.errorMessage = "Fill up required fields."
                    return;
                }

                if(this.option == "byDate") {
                    if(!this.filter.date2) {
                        this.errorMessage = "Fill up required fields."
                        return;
                    }
                }

                this.errorMessage = "";

                let payload = {
                    option: this.option,
                    id: this.filter.id,
                    date1: this.filter.date1,
                    date2: this.filter.date2,
                    time1: this.filter.time1,
                    time2: this.filter.time2,
                }

                await fetch('/admin/records/visitors/filter', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify(payload)
                }).then((response)=> {
                    response.json().then((data) => {
                        this.logs = data.logs;
                    });
                });
            },
            // For Tab 2
            submitEstablishment(event){
                this.filter.id = event.target.value;
                this.disableEstablishments = true;
                this.disableFields = false;
            },
            async submitEstablishmentFilter(event) {
                event.preventDefault();

                if(this.option == "byDate") {
                    if(!this.filter.date2) {
                        this.errorMessage = "Fill up required fields."
                        return;
                    }
                }

                this.errorMessage = "";

                let payload = {
                    option: this.option,
                    id: this.filter.id,
                    date1: this.filter.date1,
                    date2: this.filter.date2,
                    time1: this.filter.time1,
                    time2: this.filter.time2,
                }

                await fetch('/admin/records/establishments/filter', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify(payload)
                }).then((response)=> {
                    response.json().then((data) => {
                        this.logs = data.logs;
                    });
                });
            },
            // Get next tab
            getNextPageIndex(){
                if(this.pageLastIndex < this.filteredLogs.length){
                    this.pageFirstIndex =  this.pageLastIndex;
                    this.pageLastIndex = this.pageFirstIndex  + 10;
                    if(this.pageLastIndex > this.filteredLogs.length){
                        this.pageLastIndex = (this.pageLastIndex-10) + (this.filteredLogs.length % 10)
                    }
                }
            },
            getPrevPageIndex(){
                if(this.pageFirstIndex > 0){
                    this.pageLastIndex = this.pageFirstIndex;
                    this.pageFirstIndex =   this.pageFirstIndex-10;
                }
            },
        },
        async mounted() {
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();
            if (dd < 10) dd = '0' + dd;
            if (mm < 10) mm = '0' + mm;
            today = yyyy + '-' + mm + '-' + dd;
            this.max = today;

            await this.reloadContent();
            await this.getVisitors();
            await this.getEstablishments();
        },
        watch: {
            option() {
                if(this.option === "byDate") {
                    this.toggleOption = false;
                } else {
                    this.toggleOption = true;
                }
            }
        },
        computed: {
            filteredLogs() {
                if(this.tab == 1) {
                    if(this.sortOrder == "Older") {
                        return this.logs.sort((a, b) => {
                            return new Date(a.date) - new Date(b.date);
                        }).filter((log) => {
                            return log.establishment.includes(this.searchTab1.toUpperCase());
                        });
                    } else {
                        return this.logs.sort((a, b) => {
                            return new Date(b.date) - new Date(a.date);
                        }).filter((log) => {
                            return log.establishment.includes(this.searchTab1.toUpperCase());
                        });
                    }
                } else {
                    if(this.sortOrder == "Older") {
                        return this.logs.sort((a, b) => {
                            return new Date(a.date) - new Date(b.date);
                        }).filter((log) => {
                            const name = `${log.name.fname.toUpperCase()} ${log.name.lname.toUpperCase()}`
                            return name.includes(this.searchTab2.toUpperCase());
                        });
                    } else {
                        return this.logs.sort((a, b) => {
                            return new Date(b.date) - new Date(a.date);
                        }).filter((log) => {
                            const name = `${log.name.fname.toUpperCase()} ${log.name.lname.toUpperCase()}`
                            return name.includes(this.searchTab2.toUpperCase());
                        });
                    }
                }
            },
            filteredVisitors() {
                return this.visitors.filter((visitor) => {
                    const name = `${visitor.name.fname.toUpperCase()} ${visitor.name.lname.toUpperCase()}`
                    return name.includes(this.searchVisitor.toUpperCase());
                })
            },
            filteredEstablishments() {
                return this.establishments.filter((establishment) => {
                    return establishment.name.includes(this.searchEstablishment.toUpperCase());
                })
            },
            
        }
    });

    app.mount('#app');
</script>
<%- include("./partials/footer.ejs"); %>

